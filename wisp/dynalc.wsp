       ENTRY INITAL.
       TO +ENDIN IF FREE NE NIL.      DON'T INITIALIZE TWICE
       P1 = LOLIM.                    INITIALIZE SPACE POINTER.
       P2 = CAR FREE.                 PREPARE TO DTART LISTS.
+STRTL,CDR P2 = P1.                   START A LIST.
       CAR P1 = NIL, CDR P1 = NIL.    CLEAN THE NEW ELEMENT.
       STEP P1, P2 = CAR P2.          ADVANCE THE POINTERS.
       TO +STRTL IF P2 NE NIL.        ARE THERE MORE LISTS, YES.
+FREE, CDR P2 = P1.                   ATTACT ELEMENT TO FREE LIST.
       P2 = P1, STEP P1.
       TO +FREE IF P1 NE UPLIM.       ARE WE AT THE TOP, NO.
       CDR P2 = NIL.                  YES, TERMINATE THE FREE LIST.
       LPRIME = P1, CDR P1 = NIL.     START THE RETURN STACK.
+ENDIN,EXIT INITAL.
       ENTRY SUBJMP.
       CAR LPRIME = P1.               SAVE THE RETURN ADDRESS.
       PUSH DOWN LPRIME.
       EXIT SUBJMP.
       ENTRY RETURN.
       TO +NORET IF CDR LPRIME = NIL. CHECK FOR AN EMPTY RETURN STACK.
       POP UP LPRIME.                 POP THE RETURN STACK.
       P1 = CAR LPRIME.               RECALL THE RETURN ADDRESS.
       EXIT RETURN.
+NORET,MESSAGE 4.                     NO RETURNS LEFT.
       ENTRY RESTOR.
       CDR P1 = FREE, FREE = P1.      ATTACH ELEMENT TO FREE LIST.
       EXIT RESTORE.
       ENTRY GETNEW.
       TO +UNFRM IF FREE = NIL.       CHECK FOR UNFORMED FREE LIST.
       TO +ELOK IF CDR FREE NE NIL.   CHECK FOR EMPTY FREE LIST.
       TO +LISTR IF CDR LPRIME = NIL. CHECK FOR EMPTY RETURN STACK.
       P1 = LPRIME.
+STKTR,P1 = CDR P1, P1 = ATOM.        MARK AN ELEMENT OF LPRIME.
       TO +STKTR IF CDR P1 NE NIL.    ARE WE DONE, NO.
+LISTR,P1 = NIL.
+SEQLS,FLAG P1, P1 = CAR P1.          SEQUENCE THROUGH LISTS.
       TO +CROOK IF P1 IS FLAGGED.    CHECK FOR CROOK BASE REG CHAIN.
       USE TRACER.                    TRACE AND MARK ONE LIST.
       TO +SEQLS IF CAR P1 NE NIL.    ARE WE DONE, NO.
       P1 = LOLIM, P2 = NIL.          YES, FORM A FREE LIST.
+TSTFL,TO +CLRFL IF P1 = ATOM.        IS THIS FREE, NO.
       CDR P2 = P1, P2 = P1.          YES, STEP ALONG.
       TO +ADVPT.
+CLRFL,DEATOM P1.                     CLEAR THE ATOM FLAG.
+ADVPT,STEP P1.
       TO +TSTFL IF P1 NE UPLIM.      ARE WE DONE, NO.
       TO +GRBFL IF CDR FREE = NIL.   DID WE RECLAIM ANY SPACE, NO.
       P1 = NIL.                      RESTORE ALL ATOM FLAGS.
+FIXAT,P1 = ATOM, UNFLAG P1, P1 = CAR P1.
       TO +FIXAT IF CAR P1 NE NIL.
+ELOK, P1 = FREE, FREE = CDR FREE.    SATISFY THE CLAIM REQUEST.
       CDR P1 = NIL.
       EXIT GETNEW.
+UNFRM,MESSAGE 1.                     FREE LIST NEVER FORMED.
+GRBFL,MESSAGE 2.                     FREE LIST EXHAUSTED.
+CROOK,MESSAGE 3.                     BASE REGISTER CHAIN DESTROYED.
       ENTRY TRACER.
       TO +ENDTR IF CDR P1 = ATOM.    CHECK FOR EMPTY LIST.
       P2 = P1.
+FORWD,P3 = CDR P1, CDR P1 = P2.      STEP FORWARD.
+MARK, P3 = ATOM, P2 = P1, P1 = P3.   MARK AND MOVE.
       TO +FORWD IF CDR P1 NE ATOM.   ARE WE DONE, NO.
+REV,  TO +BRNCH IF CAR P1 NE ATOM.   CHECK FOR BRANCK.
+CHKBR,TO +ENDBR IF P2 IS FLAGGED.    ARE WE ON A BRANCH. YES.
       P3 = CDR P2, CDR P2 = P1.      RESTORE POINTERS.
       P1 = P2, P2 = P3.              STEP BACK.
       TO +REV IF P1 NE P2.           ARE WE DONE, NO.
+ENDTR,EXIT TRACER.
+BRNCH,P3 = CAR P1, CAR P1 = P2.      SAVE BACK POINTER IN CAR.
       FLAG P1, TO +MARK.             SET THE BPF AND TRACE THE BRANCH.
+ENDBR,P3 = CAR P2, CAR P2 = P1.      RESET THE CAR POINTER.
       UNFLAG P2.                     RESET THE BPF.
       P1 = P2, P2 = P3, TO +CHKBR.   STEP BACK.
.      END OF DYNAMIC STORAGE ALLOCATOR.
